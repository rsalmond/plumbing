{% set environment = salt.grains.get('environment') %}

{% if environment != 'dev' %}

server { 
    listen 80;
    server_name rob.salmond.ca;
    return 301 https://$host$request_uri;
}

{% endif %}

server {

{% if environment == 'dev' %}

    listen 80;
    server_name dev.salmond.ca;

{% elif environment == 'stg' %}

    #TODO: something useful
:
{% elif environment == 'prod' %}

    listen 443 ssl;
    server_name rob.salmond.ca;

    #ssl config
    ssl_certificate /etc/letsencrypt/live/rob.salmond.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rob.salmond.ca/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # omit SSLv3 because of POODLE (CVE-2014-3566)
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/letsencrypt/live/rob.salmond.ca/dhparams.pem;


{% endif %}

    location /resume {
      return 301 https://github.com/rsalmond/resume;
    }

    #misc static crap
    location /files/ {
      # redirect sequencer requests
      if ($http_user_agent ~ AppNeta) {
        return 301 https://www.appneta.com/;
      }

      # compound if condition, check for x-tv-meta header and safari user agent (that's appview)
      # https://gist.github.com/jrom/1760790
      if ($http_x_tv_meta) {
        set $appview A;
      }

      if ($http_user_agent ~ Safari) {
        set $appview "${appview}A";
      }

      if ($appview = AA) {
        return 301 https://www.appneta.com/;
      }

      alias /var/www/files/;
      autoindex on;
    }

    location /ghost {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://localhost:2370;
      proxy_redirect off;	
    }

    location /public {
      # redirect sequencer requests
      if ($http_user_agent ~ AppNeta) {
        return 301 https://www.appneta.com/;
      }

      # compound if condition, check for x-tv-meta header and safari user agent (that's appview)
      # https://gist.github.com/jrom/1760790
      if ($http_x_tv_meta) {
        set $appview A;
      }

      if ($http_user_agent ~ Safari) {
        set $appview "${appview}A";
      }

      if ($appview = AA) {
        return 301 https://www.appneta.com/;
      }

      alias /home/phro/rob-salmond-ca/core/built/public;
    }

    location /assets {
      alias /home/phro/rob-salmond-ca/content/themes/Ghostly-master/assets;
    }

    location /ghost/scripts {
      alias /home/phro/rob-salmond-ca/core/built/scripts;
    }

    location /content/images {
      alias /home/phro/rob-salmond-ca/content/images;
    }

	#node / ghost blog
	location / {
      # redirect sequencer requests
      if ($http_user_agent ~ AppNeta) {
        return 301 https://www.appneta.com/;
      }

      # compound if condition, check for x-tv-meta header and safari user agent (that's appview)
      # https://gist.github.com/jrom/1760790
      if ($http_x_tv_meta) {
        set $appview A;
      }

      if ($http_user_agent ~ Safari) {
        set $appview "${appview}A";
      }

      if ($appview = AA) {
        return 301 https://www.appneta.com/;
      }
		proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://localhost:2370;
		proxy_redirect off;	
	}
}
