apiVersion: v1
kind: Namespace
metadata:
  name: rsablog
spec:
  finalizers:
  - kubernetes

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: rsablog
  namespace: rsablog
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/kubedata/blog/content/

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rsablog
  namespace: rsablog
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rsablog
  namespace: rsablog
  labels:
    app: rsablog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsablog
  template:
    metadata:
      labels:
        app: rsablog
    spec:
      containers:
      - name: rsablog
        image: rsalmond/blog:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 2370
        env:
        - name: GHOST_CONFIG
          value: /config/config.js
        - name: NODE_ENV
          value: production
        #command: ["tail"]
        #args: ["-f", "/dev/null"]
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: content
          mountPath: /content
      volumes:
        - name: config
          configMap:
            name: rsablog
        - name: content
          persistentVolumeClaim:
            claimName: rsablog

---

apiVersion: v1
kind: Service
metadata:
  name: rsablog
  namespace: rsablog
spec:
  ports:
  - port: 2370
    name: http
  selector:
    app: rsablog

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: rsablog
  namespace: rsablog
spec:
  gateways:
  - istio-system/istio-autogenerated-k8s-ingress
  hosts:
  - test.salmond.ca
  http:
  - name: nginx
    match:
    - uri:
        prefix: "/files"
    route:
    - destination:
        host: nginx.rsablog.svc.cluster.local
        port:
          number: 80

  - name: rsablog
    match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: rsablog.rsablog.svc.cluster.local
        port:
          number: 2370
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rsablog
  namespace: rsablog
data:
  config.js: |
    // # Ghost Configuration
    // Setup your Ghost install for various environments
    // Documentation can be found at http://docs.ghost.org/usage/configuration/

    var path = require('path'),
        config;

    config = {
        // ### Development **(default)**
        development: {
            // The url to use when providing links to the site, E.g. in RSS and email.
            url: 'https://test.salmond.ca',
            database: {
                client: 'sqlite3',
                connection: {
                    //filename: path.join(__dirname, '/content/data/ghost-dev.db')
                    filename: '/content/data/ghost-dev.db'
                },
                debug: true
            },
            server: {
                // Host to be passed to node's `net.Server#listen()`
                host: '0.0.0.0',
                // Port to be passed to node's `net.Server#listen()`, for iisnode set this to `process.env.PORT`
                port: '2370'
            },
            paths: {
                //contentPath: path.join(__dirname, '/content/')
                contentPath: '/content/'
            }
        },

        // ### Production
        // When running Ghost in the wild, use the production environment
        // Configure your URL and mail settings here
        production: {
            url: 'https://rob.salmond.ca',
            mail: {},
            database: {
                client: 'sqlite3',
                connection: {
                    //filename: path.join(__dirname, '/content/data/ghost-prod.db')
                    filename: '/content/data/ghost-prod.db'
                },
                //TODO: debug: false
                debug: true
            },
            server: {
                // Host to be passed to node's `net.Server#listen()`
                host: '0.0.0.0',
                // Port to be passed to node's `net.Server#listen()`, for iisnode set this to `process.env.PORT`
                port: '2370'
            },
            paths: {
                //contentPath: path.join(__dirname, '/content/')
                contentPath: '/content/'
            }
        },

        // **Developers only need to edit below here**

        // ### Testing
        // Used when developing Ghost to run tests and check the health of Ghost
        // Uses a different port number
        testing: {
            url: 'http://127.0.0.1:2369',
            database: {
                client: 'sqlite3',
                connection: {
                    filename: path.join(__dirname, '/content/data/ghost-test.db')
                }
            },
            server: {
                host: '127.0.0.1',
                port: '2369'
            },
            logging: false
        },

        // ### Travis
        // Automated testing run through GitHub
        'travis-sqlite3': {
            url: 'http://127.0.0.1:2369',
            database: {
                client: 'sqlite3',
                connection: {
                    filename: path.join(__dirname, '/content/data/ghost-travis.db')
                }
            },
            server: {
                host: '127.0.0.1',
                port: '2369'
            },
            logging: false
        },

        // ### Travis
        // Automated testing run through GitHub
        'travis-mysql': {
            url: 'http://127.0.0.1:2369',
            database: {
                client: 'mysql',
                connection: {
                    host     : '127.0.0.1',
                    user     : 'travis',
                    password : '',
                    database : 'ghost_travis',
                    charset  : 'utf8'
                }
            },
            server: {
                host: '127.0.0.1',
                port: '2369'
            },
            logging: false
        },

        // ### Travis
        // Automated testing run through GitHub
        'travis-pg': {
            url: 'http://127.0.0.1:2369',
            database: {
                client: 'pg',
                connection: {
                    host     : '127.0.0.1',
                    user     : 'postgres',
                    password : '',
                    database : 'ghost_travis',
                    charset  : 'utf8'
                }
            },
            server: {
                host: '127.0.0.1',
                port: '2369'
            },
            logging: false
        }
    };

    console.log(config.production.database.connection.filename)
    console.log(config)

    // Export config
    module.exports = config;

---
### Static Assets Config
#

apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx
  namespace: rsablog
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/kubedata/blog/files/

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx
  namespace: rsablog
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: rsablog
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.10
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        #command: ["tail"]
        #args: ["-f", "/dev/null"]
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: files
          mountPath: /files
      volumes:
        - name: config
          configMap:
            name: nginx
        - name: files
          persistentVolumeClaim:
            claimName: nginx

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: rsablog
spec:
  ports:
  - port: 80
    name: http
  selector:
    app: nginx


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: rsablog
data:
  nginx.conf: |
    server {
        listen       80;
        server_name  localhost;
        location /files/ {
          alias /files/;
          autoindex on;
        }
    }
